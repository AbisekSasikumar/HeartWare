#include <WiFi.h>
#include <HTTPClient.h>
#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_BMP280.h>
#include "MAX30105.h"

// 🔌 Pin Definitions
#define LM35_PIN 35
#define ECG_PIN 34

// 📶 WiFi & ThingSpeak
const char* ssid = "Hathway";
const char* password = "abisek007";
const char* THINGSPEAK_API_KEY = "67DEWBO770UKV585";
const char* THINGSPEAK_URL = "https://api.thingspeak.com/update";

// 📲 Telegram Bot
String TELEGRAM_BOT_TOKEN = "8132613555:AAEJDurOpSTQKHPAzIp0LwdZlynFW7u5Uq8";
String TELEGRAM_CHAT_ID = "1126113455";

// 🧠 Sensor Objects
MAX30105 max30102;
Adafruit_BMP280 bmp;
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(12345);
WiFiClient client;

// 📲 Telegram Alert Function
void sendTelegramAlert(String message) {
  String url = "https://api.telegram.org/bot" + TELEGRAM_BOT_TOKEN +
               "/sendMessage?chat_id=" + TELEGRAM_CHAT_ID +
               "&text=" + message;
  
  HTTPClient http;
  http.begin(url);
  int httpResponseCode = http.GET();

  if (httpResponseCode > 0) {
    Serial.println("✅ Telegram Alert Sent!");
  } else {
    Serial.println("❌ Telegram Error Code: " + String(httpResponseCode));
  }

  http.end();
}

// ☁ ThingSpeak Function
void sendDataToThingSpeak(float temperature, float spo2, float heartRate, float pressure, float altitude, float accX, float accY, float accZ) {
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("❌ WiFi Disconnected, Skipping ThingSpeak");
    return;
  }

  HTTPClient http;
  String url = String(THINGSPEAK_URL) + "?api_key=" + THINGSPEAK_API_KEY +
               "&field1=" + String(heartRate) +
               "&field2=" + String(spo2) +
               "&field3=" + String(temperature) +
               "&field4=" + String(pressure) +
               "&field5=" + String(altitude) +
               "&field6=" + String(accX) +
               "&field7=" + String(accY) +
               "&field8=" + String(accZ);

  http.begin(url);
  int httpResponseCode = http.GET();

  if (httpResponseCode > 0) {
    Serial.println("✅ Data Sent to ThingSpeak!");
  } else {
    Serial.println("❌ ThingSpeak Error: " + String(httpResponseCode));
  }

  http.end();
}

void setup() {
  Serial.begin(115200);
  delay(1000);

  Serial.println("🔌 Starting...");

  // 🔗 Connect WiFi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500); Serial.print(".");
  }
  Serial.println("\n✅ WiFi Connected!");

  // 🧠 Sensor Init
  Wire.begin();

  if (!max30102.begin()) {
    Serial.println("❌ MAX30102 Not Found!");
  } else {
    Serial.println("✅ MAX30102 Connected!");
  }

  if (!bmp.begin(0x76)) {
    Serial.println("❌ BMP280 Not Found!");
  } else {
    Serial.println("✅ BMP280 Connected!");
  }

  if (!accel.begin()) {
    Serial.println("❌ ADXL345 Not Found!");
  } else {
    Serial.println("✅ ADXL345 Connected!");
  }
}

void loop() {
  Serial.println("🔁 Starting Loop...");

  // ECG Reading (for plotting)
  int ecgValue = analogRead(ECG_PIN);
  Serial.print("📈 ECG: "); Serial.println(ecgValue);

  // LM35 Temp
  float voltage = analogRead(LM35_PIN) * (3.3 / 4095.0);
  float temperature = voltage * 100.0;
  Serial.print("🌡 Temperature: "); Serial.println(temperature);

  // MAX30102 Data
  int ir = max30102.getIR();
  int red = max30102.getRed();

  float spo2 = 0.0;
  float heartRate = 0.0;
  if (ir > 1000 && red > 0) {
    spo2 = (float)red / ir * 100.0;
    heartRate = 60.0 / (ir / 1000.0);  // Dummy calc
  } else {
    Serial.println("⚠ MAX30102 readings too low");
    spo2 = 98.0;
    heartRate = 75.0;
  }
  Serial.print("❤ HR: "); Serial.print(heartRate);
  Serial.print(" bpm | SpO2: "); Serial.print(spo2); Serial.println("%");

  // BMP280 Data
  float pressure = bmp.readPressure() / 100.0;
  float altitude = bmp.readAltitude(1013.25);
  Serial.print("📊 Pressure: "); Serial.println(pressure);
  Serial.print("🗻 Altitude: "); Serial.println(altitude);

  // ADXL345 Data
  sensors_event_t event;
  accel.getEvent(&event);
  float accX = event.acceleration.x;
  float accY = event.acceleration.y;
  float accZ = event.acceleration.z;
  Serial.print("🧭 Acc X: "); Serial.println(accX);
  Serial.print("🧭 Acc Y: "); Serial.println(accY);
  Serial.print("🧭 Acc Z: "); Serial.println(accZ);

  // ⚠ Alerts
  if (spo2 < 90) {
    sendTelegramAlert("⚠ Low SpO2: " + String(spo2) + "%");
  }
  if (heartRate > 120) {
    sendTelegramAlert("⚠ High Heart Rate: " + String(heartRate) + " bpm");
  }
  if (abs(accX) > 10 || abs(accY) > 10 || abs(accZ) < 2) {
    sendTelegramAlert("⚠ Possible Fall! Accel: X=" + String(accX) + " Y=" + String(accY) + " Z=" + String(accZ));
  }

  // 📡 ThingSpeak Upload
  sendDataToThingSpeak(temperature, spo2, heartRate, pressure, altitude, accX, accY, accZ);

  // 🐍 Python Serial
  Serial.print("PYTHON-> ");
  Serial.print(heartRate); Serial.print(",");
  Serial.print(spo2); Serial.print(",");
  Serial.print(temperature); Serial.print(",");
  Serial.print(pressure); Serial.print(",");
  Serial.print(altitude); Serial.print(",");
  Serial.print(accX); Serial.print(",");
  Serial.print(accY); Serial.print(",");
  Serial.println(accZ);

  Serial.println("✅ Loop Complete\n");
  delay(15000);  // 15s delay for ThingSpeak
}
